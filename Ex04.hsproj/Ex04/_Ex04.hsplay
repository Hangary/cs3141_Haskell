-- Haskell Playground 1.0
calculate "3 4 +"       -- Just 7
calculate "3 4 - 5 +"   -- Just 4
calculate "3 4 2 / *"   -- Just 6
calculate "3 4 2 / * +" -- Nothing

-- personal test
evaluate []
calculate []
calculate "3 0 /"

calculate "3 1 + 5 6 * -"
calculate "3 1 / 3 6 * -"
calculate "3 1 + +"
calculate "10 5 / 5 * 9 +"

let str = tokenise "3 4 - 5 +"
unwrapMaybe (Just m) = m
unwrapCalc (C a) = a
let t = unwrapMaybe str

(unwrapCalc $ fmap (pure []) ((pure t) >>= evaluate)) []

-- some tests
isNothing (tokenise "1 23 k /")

map unToken (unMaybe (tokenise "1 23 0 41")) == [1,23,0,41]