-- Haskell Playground 1.0

-- Q1
let words = "I love ZUZU 123!"
let notAlpha = " 123521 !"

rot13 words

test1 words
test2 words
test3 words
test4 notAlpha
test5 words notAlpha
not (null notAlpha)
test6 notAlpha
test7 words


-- Q2
let nums1 = [1,3,2,4,1,5]
let nums2 = [0,2,10]

q2t1 nums1 nums2
q2t2 nums1 nums2
q2t3 nums1 nums2
q2t4 nums1 nums2
q2t5 nums1 nums2
q2t6 nums1 nums2

-- Q3
fromBinary "100"
toBinary 4

-- Q4
let ys = [1,1,2,3,4]
let xs = [1]

sorted (dedup xs)
dedup xs == nub xs
dedup (dedup xs) == dedup xs
dedup xs ++ dedup ys == dedup (xs ++ ys)
length (dedup xs) < length xs


-- Q5
quickCheck prop_2